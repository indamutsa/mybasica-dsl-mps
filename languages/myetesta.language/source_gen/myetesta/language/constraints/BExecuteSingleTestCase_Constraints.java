package myetesta.language.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.base.BaseReferenceConstraintsDescriptor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.ReferenceScopeProvider;
import jetbrains.mps.smodel.runtime.base.BaseScopeProvider;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.scope.Scope;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsContext;
import jetbrains.mps.scope.ListScope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.HashMap;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public class BExecuteSingleTestCase_Constraints extends BaseConstraintsDescriptor {
  public BExecuteSingleTestCase_Constraints() {
    super(CONCEPTS.BExecuteSingleTestCase$YT);
  }

  @Override
  protected Map<SReferenceLink, ReferenceConstraintsDescriptor> getSpecifiedReferences() {
    BaseReferenceConstraintsDescriptor d0 = new BaseReferenceConstraintsDescriptor(LINKS.test$rQC5, this, true, false) {
      @Nullable
      @Override
      public ReferenceScopeProvider getScopeProvider() {
        return new BaseScopeProvider() {
          @Override
          public SNodeReference getSearchScopeValidatorNode() {
            return new SNodePointer("r:137c38ca-58af-4ddb-afb8-422207a865b6(myetesta.language.constraints)", "7465687649715232837");
          }
          @Override
          public Scope createScope(final ReferenceConstraintsContext _context) {
            return ListScope.forNamedElements(SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getReferenceNode(), LINKS.suite$1B0g), LINKS.tests$y$54));
          }
        };
      }
    };
    Map<SReferenceLink, ReferenceConstraintsDescriptor> references = new HashMap<SReferenceLink, ReferenceConstraintsDescriptor>();
    references.put(d0.getReference(), d0);
    return references;
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept BExecuteSingleTestCase$YT = MetaAdapterFactory.getConcept(0xe19d8a3c67da4363L, 0x8f44c6c0cab85e88L, 0x679b735ccd235258L, "myetesta.language.structure.BExecuteSingleTestCase");
  }

  private static final class LINKS {
    /*package*/ static final SReferenceLink test$rQC5 = MetaAdapterFactory.getReferenceLink(0xe19d8a3c67da4363L, 0x8f44c6c0cab85e88L, 0x679b735ccd235258L, 0x679b735ccd23525aL, "test");
    /*package*/ static final SReferenceLink suite$1B0g = MetaAdapterFactory.getReferenceLink(0xe19d8a3c67da4363L, 0x8f44c6c0cab85e88L, 0x679b735ccd235258L, 0x679b735ccd39dd5bL, "suite");
    /*package*/ static final SContainmentLink tests$y$54 = MetaAdapterFactory.getContainmentLink(0xe19d8a3c67da4363L, 0x8f44c6c0cab85e88L, 0x3ddf8bbe6bd28507L, 0x3ddf8bbe6bd28815L, "tests");
  }
}
