package myetesta.language.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.ConstraintFunction;
import jetbrains.mps.smodel.runtime.ConstraintContext_CanBeChild;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.CheckingNodeContext;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.SNodePointer;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class BAssertStatement_Constraints extends BaseConstraintsDescriptor {
  public BAssertStatement_Constraints() {
    super(CONCEPTS.BAssertStatement$Jg);
  }

  @Override
  protected ConstraintFunction<ConstraintContext_CanBeChild, Boolean> calculateCanBeChildConstraint() {
    return new ConstraintFunction<ConstraintContext_CanBeChild, Boolean>() {
      @NotNull
      public Boolean invoke(@NotNull ConstraintContext_CanBeChild context, @Nullable CheckingNodeContext checkingNodeContext) {
        boolean result = staticCanBeAChild(context.getNode(), context.getParentNode(), context.getConcept(), context.getLink());

        if (!(result) && checkingNodeContext != null) {
          checkingNodeContext.setBreakingNode(canBeChildBreakingPoint);
        }

        return result;
      }
    };
  }
  private static boolean staticCanBeAChild(SNode node, SNode parentNode, SAbstractConcept childConcept, SContainmentLink link) {
    return SNodeOperations.isInstanceOf(parentNode, CONCEPTS.BTestCase$ik);
  }
  private static final SNodePointer canBeChildBreakingPoint = new SNodePointer("r:137c38ca-58af-4ddb-afb8-422207a865b6(myetesta.language.constraints)", "8856941154952123055");

  private static final class CONCEPTS {
    /*package*/ static final SConcept BAssertStatement$Jg = MetaAdapterFactory.getConcept(0xe19d8a3c67da4363L, 0x8f44c6c0cab85e88L, 0x7aea2d0de96dfeb7L, "myetesta.language.structure.BAssertStatement");
    /*package*/ static final SConcept BTestCase$ik = MetaAdapterFactory.getConcept(0xe19d8a3c67da4363L, 0x8f44c6c0cab85e88L, 0x3ddf8bbe6bd2850aL, "myetesta.language.structure.BTestCase");
  }
}
